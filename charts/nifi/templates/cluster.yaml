apiVersion: nifi.konpyutaika.com/v1
kind: NifiCluster
metadata:
  name: {{ .Values.nifi.clusterName }}
spec:
  service:
    headlessEnabled: true
    labels:
      cluster-name: {{ .Values.nifi.clusterName }}
  zkAddress: "zookeeper.zookeeper:2181"
  zkPath: /{{ .Values.nifi.clusterName }}
  {{- if .Values.nifi.ingress.enabled }}
  externalServices:
    - metadata:
        labels:
          cluster-name: driver-{{ .Values.nifi.clusterName }}
      name: driver-ip
      spec:
        portConfigs:
          - internalListenerName: http
            port: 8080
        type: LoadBalancer
  {{- end }}
  clusterImage: {{ .Values.nifi.clusterImage }}
  initContainerImage: "bash:5.2.2"
  oneNifiNodePerNode: true
  readOnlyConfig:
    nifiProperties:
      overrideConfigs: |
        nifi.sensitive.props.key=thisIsABadSensitiveKeyPassword
        {{- if .Values.nifi.overrideConfigs }}
        {{- range $key, $value := .Values.nifi.overrideConfigs }}
        {{ $key }}={{ $value }}
        {{- end }}
        {{- end }}
        {{- if .Values.nifi.oidc.enabled }}
        nifi.security.user.oidc.discovery.url={{ .Values.nifi.oidc.url }}
        nifi.security.user.oidc.client.id={{ .Values.nifi.oidc.client_id }}
        nifi.security.user.oidc.client.secret={{ .Values.nifi.oidc.client_secret }}
        nifi.security.identity.mapping.pattern.dn=CN=([^,]*)(?:, (?:O|OU)=.*)?
        nifi.security.identity.mapping.value.dn=$1
        nifi.security.identity.mapping.transform.dn=NONE
        {{ end }}
  pod:
    labels:
      cluster-name: {{ .Values.nifi.clusterName }}
  nodeConfigGroups:
    default_group:
      imagePullPolicy: IfNotPresent
      isNode: true
      serviceAccountName: default
      storageConfigs:
        {{- range .Values.nifi.storageConfigs }}
          - mountPath: {{ .mountPath }}
            name: {{ .name }}
            reclaimPolicy: Delete
            pvcSpec:
              accessModes:
                - ReadWriteOnce
              storageClassName: {{ .storageClassName }}
              resources:
                requests:
                  storage: {{ .storage }}
        {{- end }}
      {{- with .Values.nifi.resourcesRequirements }}
      resourcesRequirements:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  nodes:
    {{- range .Values.nifi.nodes }}
    - id: {{ .id }}
      nodeConfigGroup: {{ .nodeConfigGroup }}
    {{- end }}
  propagateLabels: true
  nifiClusterTaskSpec:
    retryDurationMinutes: 10
  listenersConfig:
    internalListeners:
      - containerPort: 8080
        type: http
        name: http
      - containerPort: 6007
        type: cluster
        name: cluster
      - containerPort: 10000
        type: s2s
        name: s2s
      - containerPort: 6342
        type: load-balance
        name: load-balance
      {{- if .Values.nifi.prometheus.servicemonitor.enabled }}
      - containerPort: 9090
        type: prometheus
        name: prometheus
      {{- end }}
